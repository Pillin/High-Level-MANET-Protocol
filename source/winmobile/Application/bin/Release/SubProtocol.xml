<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SubProtocol</name>
    </assembly>
    <members>
        <member name="T:SubProtocol.FileTransfer.Messages.FileListMessage">
            <summary>
            Representa un mensaje que contiene la lista de archivos que comparte un usuario
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FileListMessage._fileList">
            <summary>
            La lista de archivos
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListMessage.#ctor(CommLayer.NetUser,SubProtocol.FileTransfer.FileInformationList)">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="targetNetUser">El receptor de este mensaje</param>
            <param name="fileList">La lista de archivos compartidos</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FileListMessage.FileList">
            <summary>
            La lista de archivos compartidos
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.Types">
            <summary>
            Clase que enumera los tipos de mensajes usados en el protocolo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILETRANSFERPROTOCOL">
            <summary>
            Constante para el tipo file transfer protocol
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILEREQUESTMESSAGE">
            <summary>
            Constante para el tipo file request
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILEPARTMESSAGE">
            <summary>
            Constante para el tipo file part
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILECOMPLETEMESSAGE">
            <summary>
            Constante para el tipo file complete
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILEERRORMESSAGES">
            <summary>
            Constante para el tipo file download error
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILEWAITMESSAGE">
            <summary>
            Constante para el tipo file download error
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILELISTREQUESTMESSAGE">
            <summary>
            Constante para el tipo file list request
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Types.FILELISTMESSAGE">
            <summary>
            Constante para el tipo file list
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileTransferProtocol">
            <summary>
            Protocolo de transferencia de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.controlFileHandler">
            <summary>
            Handler de eventos de transferencia de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.controlFileListHandler">
            <summary>
            Handler de eventos de información de archivos compartidos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.fileMessageDownloadQueue">
            <summary>
            Cola de archivos para descargas
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.fileMessageUploadQueue">
            <summary>
            Cola de archivos para cargas
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.timer">
            <summary>
            Invoca threads de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.timerPoint">
            <summary>
            Punto de sincronización del timer
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.timerThread">
            <summary>
            Thread de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.fileMessageHandlerPoint">
            <summary>
            Punto de sincronización de transferencia de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.fileMessageHandlerLock">
            <summary>
            Lock para transferencia de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.fileData">
            <summary>
            Configuracion de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.activeDownloads">
            <summary>
            Lista de downloads activos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileTransferProtocol.activeUploads">
            <summary>
            Lista de uploads activos
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.#ctor(SubProtocol.FileTransfer.ControlI.ControlFileHandlerI,SubProtocol.FileTransfer.ControlI.ControlFileListHandlerI,SubProtocol.FileTransfer.FileData)">
            <summary>
            Constructor
            </summary>
            <param name="controlFileHandler">Un manejador de eventos de archivos</param>
            <param name="controlFileListHandler">Un manejador de eventos de lista de archivos</param>
            <param name="fileData">Los parametros de configuración de archivos</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.init">
            <summary>
            Inicializa los componentes
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.communicationTimer(System.Object)">
            <summary>
            Función invocada cada 1 segundos por el timer, invoca un thread de interación de timer
            </summary>
            <param name="objectState">Parámetro</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.proccessMessage(CommLayer.Messages.Message)">
            <summary>
            Se gatilla cuando se recibe un mensaje
            </summary>
            <param name="message">El mensaje recibido</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.errorMessage(CommLayer.Messages.Message)">
            <summary>
            Se gatilla cuando no es posible entregar un mensaje
            </summary>
            <param name="message">El mensaje no entregado</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.sendFileRequest(CommLayer.NetUser,SubProtocol.FileTransfer.FileInformation)">
            <summary>
            Se gatilla cuando se quiere enviar una petición de archivo
            </summary>
            <param name="netUser">El usuario dueño del archivo</param>
            <param name="fileInformation">los datos del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.sendFileListRequest(CommLayer.NetUser)">
            <summary>
            Se gatilla cuando se quiere enviar una petición de lista de archivos
            </summary>
            <param name="netUser">El usuario dueño de los archivos</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.sendFileList(CommLayer.NetUser)">
            <summary>
            Se gatilla cuando se quiere enviar la lista de archivos
            </summary>
            <param name="netUser">El usuario al cual enviarle la lista de archvos</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.stop">
            <summary>
            Detiene cualquier transferencia activa y termina el protocolo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.start">
            <summary>
            Activa el protocolo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.sendMessageDelegate(CommLayer.Messages.Message)">
            <summary>
            Se gatilla cuando se quiere envíar un mensaje
            Este parametro es para asignar a los handlers
            </summary>
            <param name="message">El mensaje a enviar</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.getMessageTypes">
            <summary>
            Obtiene la lista de tipos de mensajes usados por este protocolo
            </summary>
            <returns>Una tabla con valores y tipos de mensajes usados en el protocolo</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileTransferProtocol.processFiles">
            <summary>
            Procesa el archivos en proceso de descarga
            </summary>
        </member>
        <member name="E:SubProtocol.FileTransfer.FileTransferProtocol.sendMessageEvent">
            <summary>
            Evento que se gatilla cuando el protocolo quiere enviar un mensaje a la red
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageHandlerQueue">
            <summary>
            Cola de manejadores de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerQueue.thisLock">
            <summary>
            Objeto para el control de concurrencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerQueue.queue">
            <summary>
            Cola de manejadores de archivos
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandlerQueue.#ctor">
            <summary>
            Default Constructor 
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandlerQueue.draw">
            <summary>
            Obtiene el primer manejador en la cola, null si esta vacía
            </summary>
            <returns>El primer mensaje de la cola fileInformation null si está vacía</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandlerQueue.contains(System.Guid)">
            <summary>
            Chequea si existe un file handler con el id  correspondiente
            </summary>
            <param name="id">el id a buscar</param>
            <returns>true si existe, false si no</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandlerQueue.put(SubProtocol.FileTransfer.FileMessageHandler)">
            <summary>
            Coloca un manejador en la cola
            </summary>
            <param name="fileMessageHandler">El manejador a colocar en la cola</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandlerQueue.size">
            <summary>
            Retorna el tamaño de la cola
            </summary>
            <returns>El tamaño de la cola</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandlerQueue.toArray">
            <summary>
            Convierte los elementos de la cola a un array
            </summary>
            <returns>Un array con los elementos de la cola</returns>
        </member>
        <member name="T:SubProtocol.Ping.ControlI.PingHandlerI">
            <summary>
            Interfaz para eventos de mensajes de ping
            </summary>
        </member>
        <member name="M:SubProtocol.Ping.ControlI.PingHandlerI.pingResponseMessageReceived(CommLayer.NetUser,System.Double)">
            <summary>
            Se gatilla cuando se ha recibido la confirmacion de un ping
            </summary>
            <param name="netUser">El autor de la respuesta de ping</param>
            <param name="milliseconds">Milisegundos totales</param>
        </member>
        <member name="T:SubProtocol.FileTransfer.Messages.FilePartMessage">
            <summary>
            Representa un mensaje que contiene la parte de un archivo
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FilePartMessage._fileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FilePartMessage._partId">
            <summary>
            El id de la parte del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FilePartMessage._filePart">
            <summary>
            el conjunto de bytes de la parte del archivo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FilePartMessage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FilePartMessage.#ctor(CommLayer.NetUser,System.Guid,System.Int64,System.Byte[])">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="targetNetUser">El receptor de este mensaje</param>
            <param name="fileHandlerId">El id del archivo</param>
            <param name="partId">El id de la parte del archivo</param>
            <param name="filePart">El conjunto de bytes de la parte del archivo en formato string base 64</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FilePartMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FilePartMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FilePartMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FilePartMessage.FileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FilePartMessage.PartId">
            <summary>
            El id de la parte del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FilePartMessage.FilePart">
            <summary>
            El conjunto de bytes de la parte del archivo en formato string base 64
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI">
            <summary>
            Interfaz para eventos relacionados con descarga y transferencia de archivos en la red
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.downloadFileQueued(CommLayer.NetUser,System.String,System.String)">
            <summary>
            Se gatilla cuando un archivo ha sido encolado para descarga
            </summary>
            <param name="netUser">El usuario de la red dueño del archivo</param>
            <param name="fileHandlerId">El id de la transferencia</param>
            <param name="fileName">El nombre del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.downloadFileOpened(System.String)">
            <summary>
            Se gatilla cuando un archivo ha sido atendido para descarga
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.downloadFileTransfer(System.String,System.Int32)">
            <summary>
            Se gatilla cuando se ha recibido una parte del archivo en proceso de descarga
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
            <param name="percent">el porcentaje total que se ha transferido</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.downloadFileComplete(System.String,System.String)">
            <summary>
            Se gatilla cuando el archivo en proceso de descarga ha sido completado
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.downloadFileFailed(System.String)">
            <summary>
            Se gatilla cuando el archivo en proceso de descarga ha fallado
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.uploadFileQueued(CommLayer.NetUser,System.String,System.String)">
            <summary>
            Se gatilla cuando un archivo es encolado para transferencia (upload)
            </summary>
            <param name="netUser">El usuario de la red al cual se le debe transferir el archivo</param>
            <param name="fileHandlerId">El id de la transferencia</param>
            <param name="fileName">El nombre del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.uploadFileOpened(System.String)">
            <summary>
            Se gatilla cuando un archivo encolado para transferencia es atendido
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.uploadFileTransfer(System.String,System.Int32)">
            <summary>
            Se gatilla cuando se ha envíado una parte del archivo en proceso de transferencia
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
            <param name="percent">porcentaje total que se ha enviado del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.uploadFileComplete(System.String)">
            <summary>
            Se gatilla cuando se ha completado la transferencia de un archivo
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileHandlerI.uploadFileFailed(System.String)">
            <summary>
            Se gatilla cuando ha fallado el archivo en proceso de transferencia
            </summary>
            <param name="fileHandlerId">El id de la transferencia</param>
        </member>
        <member name="T:SubProtocol.Chat.Types">
            <summary>
            Clase que enumera los tipos de mensajes usados en el protocolo
            </summary>
        </member>
        <member name="F:SubProtocol.Chat.Types.CHATPROTOCOL">
            <summary>
            Constante para tipo chat
            </summary>
        </member>
        <member name="F:SubProtocol.Chat.Types.CHATMESSAGE">
            <summary>
            Constante para el tipo texto
            </summary>
        </member>
        <member name="F:SubProtocol.Chat.Types.GROUPCHATMESSAGE">
            <summary>
            Constante para el tipo texto grupal (multicast)
            </summary>
        </member>
        <member name="T:SubProtocol.Chat.ChatProtocol">
            <summary>
            Protocolo de envio y recepcion de mensajes de texto
            </summary>
        </member>
        <member name="F:SubProtocol.Chat.ChatProtocol.controlChatHandler">
            <summary>
            Handler de eventos de mensajes de texto
            </summary>
        </member>
        <member name="M:SubProtocol.Chat.ChatProtocol.#ctor(SubProtocol.Chat.ControlI.ChatHandlerI)">
            <summary>
            Constructor
            </summary>
            <param name="controlChatHandler">Un manejador de eventos de chat</param>
        </member>
        <member name="M:SubProtocol.Chat.ChatProtocol.getMessageTypes">
            <summary>
            Obtiene la lista de tipos de mensajes usados por este protocolo
            </summary>
            <returns>Una tabla con valores y tipos de mensajes usados en el protocolo</returns>
        </member>
        <member name="M:SubProtocol.Chat.ChatProtocol.proccessMessage(CommLayer.Messages.Message)">
            <summary>
            Procesa un mensaje recibido de la red
            </summary>
            <param name="message">El mensaje recibido</param>
        </member>
        <member name="M:SubProtocol.Chat.ChatProtocol.errorMessage(CommLayer.Messages.Message)">
            <summary>
            Procesa un mensaje que no se ha podido enviar
            </summary>
            <param name="message">El mensaje que no se ha podido enviar</param>
        </member>
        <member name="M:SubProtocol.Chat.ChatProtocol.sendTextMessage(CommLayer.NetUser,System.String)">
            <summary>
            Envía un mensaje de texto a la red
            </summary>
            <param name="netUser">El usuario destino del mensaje, null si es para todos</param>
            <param name="text">El texto del mensaje, si es de largo 0 no se envía</param>
        </member>
        <member name="E:SubProtocol.Chat.ChatProtocol.sendMessageEvent">
            <summary>
            Se gatilla cuando el protocolo quiere enviar un mensaje a la red
            </summary>
        </member>
        <member name="T:SubProtocol.Chat.ControlI.ChatHandlerI">
            <summary>
            Interfaz para eventos de mensajes de texto globales
            </summary>
        </member>
        <member name="M:SubProtocol.Chat.ControlI.ChatHandlerI.chatMessageReceived(CommLayer.NetUser,System.String)">
            <summary>
            Se gatilla cuando se ha recibido un nuevo mensaje de texto de un usuario
            </summary>
            <param name="netUser">El autor del mensaje</param>
            <param name="message">El mensaje de texto</param>
        </member>
        <member name="M:SubProtocol.Chat.ControlI.ChatHandlerI.groupChatMessageReceived(CommLayer.NetUser,System.String)">
            <summary>
            Se gatilla cuando se ha recibido un nuevo mensaje de texto a nivel grupal
            </summary>
            <param name="netUser">El autor del mensaje</param>
            <param name="message">El mensaje de texto</param>
        </member>
        <member name="M:SubProtocol.Chat.ControlI.ChatHandlerI.chatWarninglInformation(System.String)">
            <summary>
            Se gatilla cuando se recibe un mensaje de warning del protocolo
            </summary>
            <param name="text">el texto de información</param>
        </member>
        <member name="T:SubProtocol.Ping.Types">
            <summary>
            Clase que enumera los tipos de mensajes usados en el protocolo
            </summary>
        </member>
        <member name="F:SubProtocol.Ping.Types.PINGPROTOCOL">
            <summary>
            Constante para tipo ping
            </summary>
        </member>
        <member name="F:SubProtocol.Ping.Types.PINGMESSAGE">
            <summary>
            Constante para el tipo ping
            </summary>
        </member>
        <member name="F:SubProtocol.Ping.Types.PINGRESPONSEMESSAGE">
            <summary>
            Constante para el tipo ping response
            </summary>
        </member>
        <member name="T:SubProtocol.Ping.PingProtocol">
            <summary>
            Protocolo de envio y recepcion de pings
            </summary>
        </member>
        <member name="F:SubProtocol.Ping.PingProtocol.controlPingHandler">
            <summary>
            Handler de eventos de ping
            </summary>
        </member>
        <member name="M:SubProtocol.Ping.PingProtocol.#ctor(SubProtocol.Ping.ControlI.PingHandlerI)">
            <summary>
            Constructor
            </summary>
            <param name="controlPingHandler">Un manejador de eventos de ping</param>
        </member>
        <member name="M:SubProtocol.Ping.PingProtocol.getMessageTypes">
            <summary>
            Obtiene la lista de tipos de mensajes usados por este protocolo
            </summary>
            <returns>Una tabla con valores y tipos de mensajes usados en el protocolo</returns>
        </member>
        <member name="M:SubProtocol.Ping.PingProtocol.proccessMessage(CommLayer.Messages.Message)">
            <summary>
            Procesa un mensaje recibido de la red
            </summary>
            <param name="message">El mensaje recibido</param>
        </member>
        <member name="M:SubProtocol.Ping.PingProtocol.errorMessage(CommLayer.Messages.Message)">
            <summary>
            Procesa un mensaje que no se ha podido enviar
            </summary>
            <param name="message">El mensaje que no se ha podido enviar</param>
        </member>
        <member name="M:SubProtocol.Ping.PingProtocol.sendPingMessage(CommLayer.NetUser)">
            <summary>
            Envía un mensaje de ping a la red
            </summary>
            <param name="netUser">El usuario destino del mensaje</param>
        </member>
        <member name="E:SubProtocol.Ping.PingProtocol.sendMessageEvent">
            <summary>
            Se gatilla cuando el protocolo quiere enviar un mensaje a la red
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.Messages.FileRequestMessage">
            <summary>
            Representa un mensaje de solicitud de archivo
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FileRequestMessage._fileId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FileRequestMessage._fileHandlerId">
            <summary>
            El id de la transferencia
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileRequestMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileRequestMessage.#ctor(CommLayer.NetUser,System.Guid,System.Guid)">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="targetNetUser">El receptor de este mensaje</param>
            <param name="fileId">El id del archivo</param>
            <param name="fileHandlerId">El identificador de la transferencia</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileRequestMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileRequestMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileRequestMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FileRequestMessage.FileId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FileRequestMessage.FileHandlerId">
            <summary>
            El Id de la transferencia
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.Messages.FileCompleteMessage">
            <summary>
            Representa un mensaje de aviso de archivo completado
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FileCompleteMessage._fileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileCompleteMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileCompleteMessage.#ctor(CommLayer.NetUser,System.Guid)">
            <summary>
            Constructor Parametrizado
            </summary>
            <param name="targetNetUser">El destinatario de este mensaje</param>
            <param name="fileHandlerId">El id del arcchivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileCompleteMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileCompleteMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileCompleteMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FileCompleteMessage.FileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FilePartStatus">
            <summary>
            Clase que enumera los estados posibles de las partes de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FilePartStatus.NOTRECEIVED">
            <summary>
            Constante para el estado no recibida
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FilePartStatus.RECEIVED">
            <summary>
            Constante para el estado recibida
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FilePartIndicator">
            <summary>
            Clase que representa un indicador de trozo de archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FilePartIndicator._status">
            <summary>
            El estado de recepción de la parte
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FilePartIndicator.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FilePartIndicator.Status">
            <summary>
            El estado en que se encuentra este trozo de archivo
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.Messages.FileErrorMessage">
            <summary>
            Representa un mensaje de error al escribir un archivo
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FileErrorMessage._fileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileErrorMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileErrorMessage.#ctor(CommLayer.NetUser,System.Guid)">
            <summary>
            Constructor Parametrizado
            </summary>
            <param name="targetNetUser">El destinatario de este mensaje</param>
            <param name="fileHandlerId">El id del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileErrorMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileErrorMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileErrorMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FileErrorMessage.FileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageSender">
            <summary>
            Esta clase implementa funciones para enviar un archivo particionado mediante mensajes de texto
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageHandler">
            <summary>
            Esta clase representa un enviador y/o receptor de archivos abstracto
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._id">
            <summary>
            El id de la transferencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._remoteNetUser">
            <summary>
            El usuario remoto con quien se está intercambiando el archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._fileInformation">
            <summary>
            La información del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._partSize">
            <summary>
            El tamaño de las partes en las que se divide el archivo para la transferencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._partsNumber">
            <summary>
            El número de partes en las que se divide el archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._fileName">
            <summary>
            La ruta del archivo usado para la transferencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._fileHandlerStream">
            <summary>
            El stream usado para leer o escribir en el archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._state">
            <summary>
            El estado del manejador, un valor de FileMessageHandlerState
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._error">
            <summary>
            El mensaje de error en caso de que ocurriese
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._timeOut">
            <summary>
            El tiempo de espera que ha transcurrido
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._maxTimeOut">
            <summary>
            El maximo tiempo de espera que se toma en cuenta antes de notificar un fallo en la transferencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler._type">
            <summary>
            El tipo del manejador
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandler.sendMessage">
            <summary>
            Se gatilla cuando el manejador de archivos debe envíar un mensaje a la MANET
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.waitUp(System.Int32)">
            <summary>
            Aumenta el tiempo de espera
            </summary>
            <param name="n">La cantidad de tiempo sumar al TimeOut</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.resetTimeOut">
            <summary>
            Resetea el tiempo de espera
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.close">
            <summary>
            Cierra el manejador de transmisión
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.open">
            <summary>
            Abre el manejador de transmisión
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.attendMessage(CommLayer.Messages.Message)">
            <summary>
            Ejecuta un paso en la iteración del transmisor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.execute">
            <summary>
            Ejecuta un paso en la iteración del transmisor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageHandler.completed">
            <summary>
            Calcula cuanto se ha transferido del archivo con un valor entre 0 y 100 %
            </summary>
            <returns>el porcentaje transmitido</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.Id">
            <summary>
            El id de la transferencia
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.PartSize">
            <summary>
            El tamaño de las particiones
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.FileHandlerStream">
            <summary>
            El FileStream usado para leer y/o escribir del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.RemoteNetUser">
            <summary>
            El usuario remoto con quien se esta intercambiando el archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.State">
            <summary>
            El estado de este manejador de archivos
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.Error">
            <summary>
            La causa de error, en caso de falla
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.PartsNumber">
            <summary>
            El número de partes en que se divide el archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.FileName">
            <summary>
            El nombre del archivo que se usa para la transferencia
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.TimeOut">
            <summary>
            El tiempo de espera que ha transcurrido para el fileHandler en modo Open
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.FileInformation">
            <summary>
            La información del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.MaxTimeOut">
            <summary>
            El tiempo de espera maximo que se espera por una respuesta
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileMessageHandler.Type">
            <summary>
            El tipo del manejador
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageHandler.SendMessageDelegate">
            <summary>
            Tipo para la funcionalidad de envío de mensaje
            </summary>
            <param name="message">El mensaje a envíar</param>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageSender.currentPart">
            <summary>
            El indice de la parte que marca el límite aún no enviado
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.#ctor(CommLayer.NetUser,System.Guid,SubProtocol.FileTransfer.FileMessageHandler.SendMessageDelegate,SubProtocol.FileTransfer.FileInformation,SubProtocol.FileTransfer.FileData)">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="remoteNetUser">El usuario con quien se intercambia el archivo</param>
            <param name="remoteFileHandlerId">El id de la transferencia de archivo</param>
            <param name="sendMessageDelegate">Una función por la que se pueda enviar un mensaje</param>
            <param name="fileInformation">Información del archivo</param>
            <param name="fileData">Datos de configuración de archivos</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.open">
            <summary>
            Abre el archivo solicitado para descarga y marca el estado del este manejador de archivos como abierto
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.attendMessage(CommLayer.Messages.Message)">
            <summary>
            Atiende una solicitud de envío de parte
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.execute">
            <summary>
            Envia un trozo del archivo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.close">
            <summary>
            Cierra posibles conexiones a disco que puedan quedar abiertos
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.completed">
            <summary>
            Calcula cuanto se ha transferido del archivo con un valor entre 0 y 100 %
            </summary>
            <returns>el porcentaje transmitido</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.loadFile">
            <summary>
            Carga el lector del archivo solicitado y envía un mensaje con información del archivo
            Si ocurre algun error de lectura envia un mensaje de error al usuario remoto
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.sendPartMessage">
            <summary>
            Atiende una solicitud de envío de parte
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageSender.getPartsNumber(System.Int64,System.Int32)">
            <summary>
            Calcula el número total de particiones del archivo a transferir
            </summary>
            <param name="fileSize">El tamaño total del archivo</param>
            <param name="partSize">El tamaño de las particiones</param>
            <returns>El número total de particiones del archivo a transferir</returns>
        </member>
        <member name="T:SubProtocol.Chat.Messages.ChatMessage">
            <summary>
            Representa un mensaje de texto global
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.Chat.Messages.ChatMessage._text">
            <summary>
            El texto de este mensaje
            </summary>
        </member>
        <member name="M:SubProtocol.Chat.Messages.ChatMessage.#ctor">
            <summary>
            Constructor parametrizado
            </summary>
        </member>
        <member name="M:SubProtocol.Chat.Messages.ChatMessage.#ctor(CommLayer.NetUser,System.String)">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="targetNetUser">El usuario destinatario de este mensaje</param>
            <param name="text">El texto del mensaje</param>
        </member>
        <member name="M:SubProtocol.Chat.Messages.ChatMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.Chat.Messages.ChatMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.Chat.Messages.ChatMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.Chat.Messages.ChatMessage.Text">
            <summary>
            El texto del mensaje
            </summary>
        </member>
        <member name="T:SubProtocol.Chat.Messages.GroupChatMessage">
            <summary>
            Representa un mensaje de texto global
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.Chat.Messages.GroupChatMessage._text">
            <summary>
            El texto de este mensaje
            </summary>
        </member>
        <member name="M:SubProtocol.Chat.Messages.GroupChatMessage.#ctor">
            <summary>
            Constructor parametrizado
            </summary>
        </member>
        <member name="M:SubProtocol.Chat.Messages.GroupChatMessage.#ctor(System.String)">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="text">El texto del mensaje</param>
        </member>
        <member name="M:SubProtocol.Chat.Messages.GroupChatMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.Chat.Messages.GroupChatMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.Chat.Messages.GroupChatMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.Chat.Messages.GroupChatMessage.Text">
            <summary>
            El texto del mensaje
            </summary>
        </member>
        <member name="T:SubProtocol.Ping.Messages.PingResponseMessage">
            <summary>
            Envía una respuesta de mensaje de Ping a la maquina remota destino para medir tiempo de envio + respuesta
            </summary>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingResponseMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingResponseMessage.#ctor(System.Int64,CommLayer.NetUser)">
            <summary>
            Constructor
            </summary>
            <param name="timeStamp"></param>
            <param name="targetNetUser"></param>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingResponseMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingResponseMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="P:SubProtocol.Ping.Messages.PingResponseMessage.Timestamp">
            <summary>
            Tiempo original
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.Messages.FileListRequestMessage">
            <summary>
            Representa un mensaje de petición de lista de archivos que comparte un usuario
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListRequestMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListRequestMessage.#ctor(CommLayer.NetUser)">
            <summary>
            Constructor parametrizado
            </summary>
            <param name="targetNetUser">El receptor de este mensaje</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListRequestMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListRequestMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileListRequestMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageHandlerState">
            <summary>
            Clase que enumera los estados posibles del manejador de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerState.WAITING">
            <summary>
            Constante para el estado esperando en la cola
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerState.OPEN">
            <summary>
            Constante para el estado abierto
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerState.COMPLETED">
            <summary>
            Constante para el estado completado
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerState.ERROR">
            <summary>
            Constante para el estado fallido
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerState.ACTIVE">
            <summary>
            Constante para el estado solicitado
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageHandlerType">
            <summary>
            Clase que enumera los tipos posibles del manejador de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerType.DOWNLOAD">
            <summary>
            Constante para el estado esperando en la cola
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageHandlerType.UPLOAD">
            <summary>
            Constante para el estado abierto
            </summary>
        </member>
        <member name="T:SubProtocol.Ping.Messages.PingMessage">
            <summary>
            Envía un mensaje de Ping a la maquina remota destino para medir tiempo de envio + respuesta
            </summary>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingMessage.#ctor(CommLayer.NetUser)">
            <summary>
            Constuctor
            </summary>
            <param name="targetNetUser"></param>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.Ping.Messages.PingMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="P:SubProtocol.Ping.Messages.PingMessage.Timestamp">
            <summary>
            Tiempo
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileMessageReceiver">
            <summary>
            Esta clase implementa funciones para recepcionar un archivo particionado que se envía mediante mensajes de texto
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageReceiver.parts">
            <summary>
            Un array con las particiones del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageReceiver.thisLock">
            <summary>
            Objeto para control de threading
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageReceiver.partsLoaded">
            <summary>
            Numero de partes que se han recibido
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileMessageReceiver.downloadDir">
            <summary>
            Directorio de descarga
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.#ctor(CommLayer.NetUser,SubProtocol.FileTransfer.FileMessageHandler.SendMessageDelegate,SubProtocol.FileTransfer.FileInformation,SubProtocol.FileTransfer.FileData)">
            <summary>
            Constructor Parametrizado
            </summary>
            <param name="remoteNetUser">El usuario remoto con el cual se intercambiará el archivo</param>
            <param name="sendMessageDelegate">Un método con el cual se puedan envíar mensajes a la MANET</param>
            <param name="fileInformation">La información del archivo</param>
            <param name="fileData">Los parámetros de configuración</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.open">
            <summary>
            Envía el mensaje al usuario remoto de petición de archivo y marca el estado del manejador como abierto
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.attendMessage(CommLayer.Messages.Message)">
            <summary>
            Envía un mensaje de petición de partes del archivo al usuario remoto y marca el estado del manejador como esperando
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.execute">
            <summary>
            No hace nada
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.close">
            <summary>
            Cierra posibles conexiones a disco creadas
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.completed">
            <summary>
            Calcula cuanto se ha transferido del archivo con un valor entre 0 y 100 %
            </summary>
            <returns>el porcentaje transmitido</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.createFile">
            <summary>
            Crea el archivo temporal para la recepción de las partes
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.receivePartMessage(SubProtocol.FileTransfer.Messages.FilePartMessage)">
            <summary>
            Atiende un mensaje que contiene una parte del archivo y escribe dicha parte a disco
            </summary>
            <param name="message">El mensaje con la parte del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileMessageReceiver.getPartsNumber(System.Int64,System.Int32)">
            <summary>
            Obtiene el numero total de particiones del archivo
            </summary>
            <param name="fileSize">el tamaño total del archivo</param>
            <param name="partSize">el tamaño de las particiones</param>
            <returns>el numero total de particiones del archivo</returns>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileInformation">
            <summary>
            Datos de un archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileInformation._name">
            <summary>
            El nombre del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileInformation._path">
            <summary>
            La ruta
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileInformation._size">
            <summary>
            El tamaño en numero de bytes del archivo
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileInformation._id">
            <summary>
            El Id del archivo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformation.#ctor">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformation.#ctor(System.String,System.Int64,System.String)">
            <summary>
            Constructor Parametrizado, crea un identificador de archivo nuevo
            </summary>
            <param name="name">El nombre del archivo</param>
            <param name="size">El tamaño, en numero de bytes</param>
            <param name="path">La ruta al archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformation.#ctor(System.String,System.Int64,System.Guid)">
            <summary>
            Constructor Parametrizad
            </summary>
            <param name="name">El nombre del archivo</param>
            <param name="size">El tamaño, en numero de bytes</param>
            <param name="id">El identificador del archivo</param>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileInformation.Name">
            <summary>
            El nombre del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileInformation.Path">
            <summary>
            (ruta completa)
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileInformation.Size">
            <summary>
            El tamaño en numero de bytes del archivo
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileInformation.Id">
            <summary>
            El identificador del archivo
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileInformationList">
            <summary>
            Lista de Objetos de información de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileInformationList.collection">
            <summary>
            La tabla de hashing de la colección
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileInformationList.thisLock">
            <summary>
            Candado para control de threading
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformationList.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformationList.add(SubProtocol.FileTransfer.FileInformation)">
            <summary>
            Agrega a la lista
            </summary>
            <param name="fileInformation">La informacion de archivo a agregar</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformationList.remove(System.Guid)">
            <summary>
            Remueve de la lista
            </summary>
            <param name="id">El id  a remover</param>
            <returns>true si existia y fue removido, false si no</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformationList.getFileInformation(System.Guid)">
            <summary>
            Obtiene un objeto de la lista con busqueda en orden constante
            </summary>
            <param name="id">el id a buscar</param>
            <returns>El objeto de la lista, null si no existía</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformationList.size">
            <summary>
            Calcula el tamaño de la coleccion
            </summary>
            <returns>El tamaño de la coleccion</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileInformationList.toArray">
            <summary>
            Genera un array con el contenido de la coleccion
            </summary>
            <returns>el array con el contenido de la coleccion</returns>
        </member>
        <member name="T:SubProtocol.FileTransfer.FileData">
            <summary>
            Datos de configuración para descarga y transferencia de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._partSize">
            <summary>
            El tamaño de las partes en las que se divide un archivo para carga o descarga
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._downloadDir">
            <summary>
            Ruta del directorio de descarga de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._fileTimeOut">
            <summary>
            tiempo de espera de respuesta de transferencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData.fileList">
            <summary>
            La lista de archivos que se comparten
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._fileRiseUp">
            <summary>
            Tiempo que se suma al recibir respuesta de transferencia
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._timeIntervalTimer">
            <summary>
            Intervalo de interación de transferencia de archivos
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._simulteneusUpload">
            <summary>
            numero maximo de cargas activas
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.FileData._simulteneusDownload">
            <summary>
            número maximo de descargas activas
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileData.#ctor">
            <summary>
            Default Constructor, inicializa los valores por omisión de la configuración.
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.FileData.createDownloadDir">
            <summary>
            Crea el directorio de archivos descargados
            </summary>
            <returns>La ruta completa a los archivos descargados</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.PartSize">
            <summary>
            El tamaño de las partes de los archivos enviados, en numero de bytes
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.DownloadDir">
            <summary>
            La ruta completa del directorio de archivos descargados
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.FileTimeOut">
            <summary>
            Tiempo de espera de respuesta de transferencia
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.FileRiseUp">
            <summary>
            Tiempo que se suma al recibir respuesta de transferencia
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.TimeIntervalTimer">
            <summary>
            Intervalo de interación de transferencia de archivos
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.SimulteneusUpload">
            <summary>
            numero maximo de cargas activas
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.SimulteneusDownload">
            <summary>
            número maximo de descargas activas
            </summary>
        </member>
        <member name="P:SubProtocol.FileTransfer.FileData.FileList">
            <summary>
            Lista de archivos que comparte este usuario
            Lee del directorio compartido la lista de archivos cada vez que se llama a esta propiedad
            </summary>
        </member>
        <member name="T:SubProtocol.FileTransfer.ControlI.ControlFileListHandlerI">
            <summary>
            Interfaz para eventos relacionados con la información de archivos compartidos en la red
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileListHandlerI.addFileList(CommLayer.NetUser,SubProtocol.FileTransfer.FileInformationList)">
            <summary>
            Se gatilla cuando un usuario a compartido una nueva lista de archivos
            </summary>
            <param name="netUser">El usuario dueño de los archivos</param>
            <param name="fileList">La lista de archivos</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.ControlI.ControlFileListHandlerI.removeFileList(CommLayer.NetUser)">
            <summary>
            Se gatilla cuando un usuario ha dejado de compartir archivos en la red
            </summary>
            <param name="netUser">El usuario de la red que ya no comparte archivos</param>
        </member>
        <member name="T:SubProtocol.FileTransfer.Messages.FileWaitMessage">
            <summary>
            Representa un mensaje de espera para descargar un archivo
            Protocolo Safe TCP
            </summary>
        </member>
        <member name="F:SubProtocol.FileTransfer.Messages.FileWaitMessage._fileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileWaitMessage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileWaitMessage.#ctor(CommLayer.NetUser,System.Guid)">
            <summary>
            Constructor Parametrizado
            </summary>
            <param name="targetNetUser">El destinatario de este mensaje</param>
            <param name="fileHandlerId">El id del archivo</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileWaitMessage.makePack">
            <summary>
            Convierte las propiedades del mensaje en un paquete de bytes
            </summary>
            <returns>un paquete de bytes con las propiedades del mensaje</returns>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileWaitMessage.unPack(System.Byte[])">
            <summary>
            Convierte un paquete de bytes en las propiedades del mensaje
            </summary>
            <param name="messagePack">El paquete de bytes</param>
        </member>
        <member name="M:SubProtocol.FileTransfer.Messages.FileWaitMessage.ToString">
            <summary>
            Sobreescribe el metodo toString
            </summary>
            <returns>El string que representa este objeto</returns>
        </member>
        <member name="P:SubProtocol.FileTransfer.Messages.FileWaitMessage.FileHandlerId">
            <summary>
            El id del archivo
            </summary>
        </member>
    </members>
</doc>
