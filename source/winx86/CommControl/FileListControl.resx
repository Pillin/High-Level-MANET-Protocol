<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="iconList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAY
        CgAAAk1TRnQBSQFMAwEBAAEEAQABBAEAASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUD/AP8A/wD/AP8A/wD/AP8AKgADFAEaAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFo
        AT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFo
        AT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAT4CPAFoAx0BJ/8ApQADKwFAA64B/wN9
        Af8DkwH/A5MB/wOTAf8DkwH/A5MB/wOTAf8DkwH/A5MB/wOTAf8DkwH/A5MB/wOTAf8DkwH/A5MB/wOT
        Af8DkwH/A5MB/wOTAf8DgQH/ATsCOgFg/wClAAMrAUADqgH/AVMCRwGiAwcBCAMHAQgDBwEIAwcBCAMH
        AQgDBwEIAwcBCAMHAQgDBwEIAwcBCAMHAQgDBwEIAwcBCAMHAQgDBwEIAwcBCAMHAQgDBwEIAU0CRgGT
        ATsCOgFg/wClAAMrAUADqwH/AVICRgGfSAABTQJGAY8BOwI6AWD/AKUAAysBQAOrAf8BUgJGAZ8DKQE8
        AUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGH
        AUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAUoCRQGHAy0BRAFNAkYBjwE7AjoBYP8ApQADKwFA
        A6sB/wFSAkYBnwFBAj8BcAOnAf8DeAH/A3gB/wN4Af8DeAH/A3gB/wN4Af8DeAH/A3gB/wN4Af8DeAH/
        A3gB/wN4Af8DeAH/A3gB/wOhAf8BSAJEAYABTQJGAY8BOwI6AWD/AKUAAysBQAOrAf8BUgJGAZ8DCgEL
        AxMBGAMTARgDEwEYAxMBGAMTARgDEwEYAxMBGAMTARgDEwEYAxMBGAMTARgDEwEYAxMBGAMTARgDEwEY
        AxMBGAMKAQwBTQJGAY8BOwI6AWD/AKUAAysBQAOrAf8BUgJGAZ8BQQI/AXADqgH/A3wB/wN8Af8DfAH/
        A3wB/wN8Af8DfAH/A3wB/wN8Af8DfAH/A3wB/wN8Af8DfAH/A3wB/wN8Af8DpAH/AUgCRAGAAU0CRgGP
        ATsCOgFg/wClAAMrAUADqwH/AVICRgGfAx0BJwE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3
        AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3AjYBWAE3
        AjYBWAMgASwBTQJGAY8BOwI6AWD/AKUAAysBQAOrAf8BUgJGAZ9IAAFNAkYBjwE7AjoBYP8ApQADKwFA
        A6sB/wFSAkYBnwFBAj8BcAOPAf8DUgH/A1IB/wNSAf8DUgH/A1IB/wNSAf8DUgH/A1IB/wNSAf8DUgH/
        A1IB/wNSAf8DUgH/A1IB/wOHAf8BSAJEAYABTQJGAY8BOwI6AWD/AKUAAysBQAOrAf8BUgJGAZ8DJwE4
        AUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGA
        AUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAUgCRAGAAysBQAFNAkYBjwE7AjoBYP8ApQADKwFA
        A6sB/wFSAkYBn0gAAU0CRgGPATsCOgFg/wClAAMrAUADqwH/AVICRgGfAUECPwFwA2wB/wMRAf8DEQH/
        AxEB/wMRAf8DEQH/A6sB/wMNARAkAAFNAkYBjwE7AjoBYP8ApQADKwFAA6sB/wFSAkYBnwMwAUoBVgJJ
        AacBVgJHAacBVgJHAacBVgJHAacBVgJHAacBVgJHAacBVwJJAacDCgELJAABTQJGAY8BOwI6AWD/AKUA
        AysBQAOrAf8BUgJGAZ8DLgFGAVICRwGfAVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRgGf
        AVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRgGfAVICRwGfAzMBUAFN
        AkYBjwE7AjoBYP8ApQADKwFAA6sB/wFSAkYBnwFBAj8BcAOKAf8DSgH/A0oB/wNKAf8DSgH/A0oB/wNK
        Af8DSgH/A0oB/wNKAf8DSgH/A0oB/wNKAf8DSgH/A0oB/wOBAf8BSAJEAYABTQJGAY8BOwI6AWD/AKUA
        AysBQAOrAf8BUgJGAZ9IAAFNAkYBjwE7AjoBYP8ApQADKwFAA6sB/wFSAkYBnwMlATUBRQJBAXgBRQJB
        AXgBRQJBAXgBRQJBAXgBRQJBAXgBRQJBAXgBRQJBAXgBRQJBAXgBRQJBAXgBRQJBAXgBRQJBAXgBOwI6
        AWEDFwEeAUUCQQF4AUUCQQF4AUUCQQF4AUUCQQF4AV0CRQHEATsCOgFg/wClAAMrAUADqwH/AVICRgGf
        AUECPwFwA7kB/wOPAf8DjwH/A48B/wOPAf8DjwH/A48B/wOPAf8DjwH/A48B/wOPAf8BZQJIAc8DKwFA
        A5oB/wM1Af8DNQH/AzsB/wN+Af8BOwI6AWD/AKUAAysBQAOrAf8BUgJGAZ80AAMrAUADgwH/AwUB/wMP
        Af8BZwJgAfsBQAI+AW3/AKkAAysBQAOrAf8BUgJGAZ80AAMrAUADhQH/AyQB/wFnAkgB3AE3AjYBWP8A
        rQADKwFAA58B/wFjAkIB2AFPAkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFP
        AkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFPAkcBlwFZAkgBsQOBAf8BXwJGAcYDKAE6/wCxAAMH
        AQgDGQEgAxkBIAMZASADGQEgAxkBIAMZASADGQEgAxkBIAMZASADGQEgAxkBIAMZASADGQEgAxkBIAMZ
        ASADGQEgAxkBIAMQART/AP8A/wD/AP8A/wD/AP8A/wCtAAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEB
        AQABAQYAAQIWAAP/AQAE/wwABP8MAAT/DAAE/wwAAfACAAEfDAAB8AIAAR8MAAHwAgABHwwAAfEC/wGf
        DAAB8AIAAR8MAAHwAgABHwwAAfACAAEfDAAB8AIAAR8MAAHwAgABHwwAAfEC/wGfDAAB8AIAAR8MAAHw
        AgABHwwAAfEC/wGfDAAB8AEAAf8BnwwAAfABAAH/AZ8MAAHwAgABHwwAAfACAAEfDAAB8QL/AZ8MAAHw
        AgABHwwAAfACAAEfDAAB8QH/AfABPwwAAfEB/wHwAX8MAAHwAgAB/wwAAfABAAEBAf8MAAT/DAAE/wwA
        BP8MAAT/DAAL
</value>
  </data>
</root>